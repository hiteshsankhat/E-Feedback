/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package e.fd;

import Connect.JavaConnectDB;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author hites
 */
public class View_Subject_info extends javax.swing.JFrame {

    Connection con = null, con1 = null;
    OraclePreparedStatement pst = null;
    OracleResultSet rs = null;
    OracleResultSet rs1 = null;
    String branch = null;
    String semester, div, name = null, surname = null, subject, initial = null, sub = null;
    int total = 0, count = 0, out = 0;
    float avg = 0;

    /**
     * Creates new form View_Subject_info
     */
    public View_Subject_info() {
        initComponents();
        TableColumnModel columnModel = Result.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(50);
        columnModel.getColumn(2).setPreferredWidth(20);
        columnModel.getColumn(3).setPreferredWidth(150);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        semester_box = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        Student_Div_A = new javax.swing.JRadioButton();
        Student_Div_B = new javax.swing.JRadioButton();
        Student_Div_C = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Result = new javax.swing.JTable();
        th = new javax.swing.JButton();
        pr = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        b_box = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Semester:-");

        semester_box.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6" }));
        semester_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semester_boxActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Division:-");

        buttonGroup1.add(Student_Div_A);
        Student_Div_A.setText("A");

        buttonGroup1.add(Student_Div_B);
        Student_Div_B.setText("B");

        buttonGroup1.add(Student_Div_C);
        Student_Div_C.setText("C");

        Result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Surname", "Initial", "Subject"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Result.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Result);
        if (Result.getColumnModel().getColumnCount() > 0) {
            Result.getColumnModel().getColumn(0).setResizable(false);
            Result.getColumnModel().getColumn(1).setResizable(false);
            Result.getColumnModel().getColumn(2).setResizable(false);
            Result.getColumnModel().getColumn(3).setResizable(false);
        }

        th.setText("Theory");
        th.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thActionPerformed(evt);
            }
        });

        pr.setText("Practical");
        pr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Branch");

        b_box.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CO", "EJ", "IF" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(semester_box, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Student_Div_A)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Student_Div_B)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Student_Div_C)
                        .addGap(0, 42, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(th)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pr)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(semester_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Student_Div_A, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Student_Div_B, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Student_Div_C, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(th))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pr)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void thActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thActionPerformed
        con1 = JavaConnectDB.ConnectDB();

        if (Student_Div_A.isSelected()) {
            div = Student_Div_A.getText();
        }
        if (Student_Div_B.isSelected()) {
            div = Student_Div_B.getText();
        }
        if (Student_Div_C.isSelected()) {
            div = Student_Div_C.getText();
        }
        semester = (String) semester_box.getSelectedItem();
        branch = (String) b_box.getSelectedItem();
        DefaultTableModel th_dtm = (DefaultTableModel) Result.getModel();
        while (th_dtm.getRowCount() > 0) {
            for (int i = 0; i < th_dtm.getRowCount(); i++) {
                th_dtm.removeRow(i);
            }
        }

        String sql1 = "select name, surname from staff_info where initials=?";
        String sql = "select SUBJECT,THEORY_NAME_OF_PROF,full_sub_name from SUBJECT_INFO where branch=? AND Division=? AND semester=? AND THEORY_NAME_OF_PROF is not null";
        try {
            pst = (OraclePreparedStatement) con1.prepareStatement(sql);
            pst.setString(1, branch);
            pst.setString(2, div);
            pst.setString(3, semester);
            rs = (OracleResultSet) pst.executeQuery();
            while (rs.next()) {
                initial = rs.getString("THEORY_NAME_OF_PROF");
                sub = rs.getString("full_sub_name");
                subject = rs.getString("subject");

                pst = (OraclePreparedStatement) con1.prepareStatement(sql1);
                pst.setString(1, initial);
                rs1 = (OracleResultSet) pst.executeQuery();
                while (rs1.next()) {
                    name = rs1.getString("name");
                    surname = rs1.getString("surname");
                }
                DefaultTableModel model = (DefaultTableModel) Result.getModel();
                model.insertRow(Result.getRowCount(), new Object[]{name, surname, initial, sub});
                name = null;
                surname = null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_thActionPerformed

    private void prActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prActionPerformed
        con = JavaConnectDB.ConnectDB();

        if (Student_Div_A.isSelected()) {
            div = Student_Div_A.getText();
        }
        if (Student_Div_B.isSelected()) {
            div = Student_Div_B.getText();
        }
        if (Student_Div_C.isSelected()) {
            div = Student_Div_C.getText();
        }
        semester = (String) semester_box.getSelectedItem();
        branch = (String) b_box.getSelectedItem();
        DefaultTableModel th_dtm = (DefaultTableModel) Result.getModel();

        while (th_dtm.getRowCount() > 0) {
            for (int i = 0; i < th_dtm.getRowCount(); i++) {
                th_dtm.removeRow(i);
            }
        }
        String sql1 = "select name, surname from staff_info where initials=?";
        String sql = "select SUBJECT,PRACTICAL_NAME_OF_PROF,full_sub_name from SUBJECT_INFO where branch=? AND Division=? AND semester=? AND PRACTICAL_NAME_OF_PROF is not null";
        try {
            pst = (OraclePreparedStatement) con.prepareStatement(sql);
            pst.setString(1, branch);
            pst.setString(2, div);
            pst.setString(3, semester);
            rs = (OracleResultSet) pst.executeQuery();
            while (rs.next()) {
                initial = rs.getString("PRACTICAL_NAME_OF_PROF");
                sub = rs.getString("full_sub_name");
                subject = rs.getString("subject");

                pst = (OraclePreparedStatement) con.prepareStatement(sql1);
                pst.setString(1, initial);
                rs1 = (OracleResultSet) pst.executeQuery();
                while (rs1.next()) {
                    name = rs1.getString("name");
                    surname = rs1.getString("surname");
                }
                DefaultTableModel model = (DefaultTableModel) Result.getModel();
                model.insertRow(Result.getRowCount(), new Object[]{name, surname, initial, sub});
                name = null;
                surname = null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }  // TODO add your handling code here:
    }//GEN-LAST:event_prActionPerformed

    private void semester_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semester_boxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semester_boxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new AdminPage().setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_Subject_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_Subject_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_Subject_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_Subject_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_Subject_info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Result;
    private javax.swing.JRadioButton Student_Div_A;
    private javax.swing.JRadioButton Student_Div_B;
    private javax.swing.JRadioButton Student_Div_C;
    private javax.swing.JComboBox b_box;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pr;
    private javax.swing.JComboBox semester_box;
    private javax.swing.JButton th;
    // End of variables declaration//GEN-END:variables
}
